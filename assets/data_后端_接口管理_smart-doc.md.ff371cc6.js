import{_ as s,o as a,c as n,X as o}from"./chunks/framework.9bc23fa4.js";const l="/learning-document-v3/assets/image1.c4da09bb.png",t="/learning-document-v3/assets/image2.e982c814.png",p="/learning-document-v3/assets/image3.9908283d.png",m=JSON.parse('{"title":"smart-doc","description":"","frontmatter":{},"headers":[],"relativePath":"data/后端/接口管理/smart-doc.md","filePath":"data/后端/接口管理/smart-doc.md","lastUpdated":1720420715000}'),e={name:"data/后端/接口管理/smart-doc.md"},r=o(`<h1 id="smart-doc" tabindex="-1">smart-doc <a class="header-anchor" href="#smart-doc" aria-label="Permalink to &quot;smart-doc&quot;">​</a></h1><h2 id="smart-doc-1" tabindex="-1">smart-doc <a class="header-anchor" href="#smart-doc-1" aria-label="Permalink to &quot;smart-doc&quot;">​</a></h2><h3 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h3><blockquote><p>根据接口源码分析生成文档，不使用注解侵入业务代码</p></blockquote><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>步骤一 项目的resources文件夹下新建文件smart-doc.json</p><blockquote><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">projectName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">项目名称</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">                        </span><span style="color:#676E95;font-style:italic;">// 配置自己的项目名称，不设置则插件自动获取pom中的projectName</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">outPath</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">src/main/resources/static/doc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// 指定文档的输出路径</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">appToken</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c16931fa6590483fb7a4e85340fcbfef</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// torna平台appToken</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">openUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:7700/api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// torna平台地址，填写自己的私有化部署地址。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">debugEnvName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">本地环境</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">                        </span><span style="color:#676E95;font-style:italic;">// torna环境名称。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">debugEnvUrl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://127.0.0.1:8080</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">           </span><span style="color:#676E95;font-style:italic;">// 推送torna配置接口服务地址，测试的接口所在的服务器的url</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">tornaDebug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span><span style="color:#A6ACCD;">                             </span><span style="color:#676E95;font-style:italic;">// 启用会推送日志</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">replace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;">                                  </span><span style="color:#676E95;font-style:italic;">// 推送torna时替换旧的文档。改动还是会推送过去覆盖的，这个功能主要是保证代码删除了，torna上没有删除。</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><p>步骤二 项目的pom文件plugins添加smart-doc插件</p><blockquote><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">plugin</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">com.github.shalousun</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">smart-doc-maven-plugin</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2.6.3</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">&lt;!--指定生成文档的使用的配置文件,配置文件放在自己的项目中--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configFile</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">./src/main/resources/smart-doc.json</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">configFile</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">&lt;!--指定项目名称，推荐使用动态参数，例如\${project.description}--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">&lt;!--如果smart-doc.json中和此处都未设置projectName，2.3.4开始，插件自动采用pom中的projectName作为设置--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">projectName</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">\${project.description}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">projectName</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">executions</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">execution</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;">&lt;!--如果不需要在执行编译时启动smart-doc，则将phase注释掉--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">phase</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">package</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">phase</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">execution</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">executions</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">plugin</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></blockquote><h3 id="生成文档" tabindex="-1">生成文档 <a class="header-anchor" href="#生成文档" aria-label="Permalink to &quot;生成文档&quot;">​</a></h3><p>idea maven里面的插件生成文件</p><blockquote><p>smart-doc.json 配置&quot;allInOne&quot;: true后，生成的文档中只会包含一个index.html文件。如果设置为false，生成的接口文档会包括api.html、dict.html和error.html多个文件，一般推荐为true</p></blockquote><p><img src="`+l+'" alt="img"><br> 生成Postman文档，导入Posman就可以在postman测试接口</p><h2 id="torna" tabindex="-1">torna <a class="header-anchor" href="#torna" aria-label="Permalink to &quot;torna&quot;">​</a></h2><h3 id="描述-1" tabindex="-1">描述 <a class="header-anchor" href="#描述-1" aria-label="Permalink to &quot;描述&quot;">​</a></h3><blockquote><p>官网<br><a href="https://torna.cn/" target="_blank" rel="noreferrer">https://torna.cn/</a><br><a href="https://torna.cn/dev/" target="_blank" rel="noreferrer">https://torna.cn/dev/</a></p></blockquote><h3 id="搭建" tabindex="-1">搭建 <a class="header-anchor" href="#搭建" aria-label="Permalink to &quot;搭建&quot;">​</a></h3><blockquote><p>todo</p></blockquote><h2 id="smart-doc推送torna" tabindex="-1">smart-doc推送torna <a class="header-anchor" href="#smart-doc推送torna" aria-label="Permalink to &quot;smart-doc推送torna&quot;">​</a></h2><p>smart-json里面的 appToken、openUrl对应下图</p><blockquote><p><img src="'+t+'" alt="img"></p></blockquote><p>smart-doc推送torna 方法一 idea maven插件执行 <img src="'+p+`" alt="img"> 方法二 执行脚本</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 使用 Maven 构建项目的命令</span></span>
<span class="line"><span style="color:#A6ACCD;">mvn </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">DskipTests</span><span style="color:#89DDFF;">=true</span><span style="color:#A6ACCD;"> clean install</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 使用 Maven 插件生成 &quot;Smart-doc&quot; 的 &quot;torna-rest&quot; 文档的命令</span></span>
<span class="line"><span style="color:#A6ACCD;">mvn </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Dfile</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">encoding</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">UTF</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> smart</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;">torna</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">rest </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">pl </span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;">start </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">am</span></span></code></pre></div><p>命令详细描述<br> mvn -DskipTests=true clean install</p><blockquote><p>mvn 是运行 Maven 命令的命令行前缀。<br> -DskipTests=true 是设置 Maven 属性，跳过执行测试用例。<br> clean 是一个 Maven 生命周期阶段，它会清理之前构建生成的文件。<br> install 是一个 Maven 生命周期阶段，它会<strong>将构建生成的包安装到本地 Maven 仓库中</strong>，以便后续可以在其他项目中引用。</p></blockquote><p>mvn -Dfile.encoding=UTF-8 smart-doc:torna-rest -pl :start -am</p><blockquote><p>mvn 是运行 Maven 命令的命令行前缀。<br> -Dfile.encoding=UTF-8 是设置 Maven 属性，指定编码为 UTF-8。<br> smart-doc:torna-rest 是执行 smart-doc 插件的 torna-rest 目标，用于生成 &quot;torna-rest&quot; 文档。<br> -pl :start 是限制只在 start 模块中执行该命令，而不是整个项目。<br> -am 表示同时构建依赖模块。</p></blockquote><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://smart-doc-group.github.io/#/zh-cn/?id=smart-doc" target="_blank" rel="noreferrer">https://smart-doc-group.github.io/#/zh-cn/?id=smart-doc</a><br><a href="https://zhuanlan.zhihu.com/p/610924383?utm_id=0" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/610924383?utm_id=0</a></p>`,29),c=[r];function D(y,F,i,C,u,A){return a(),n("div",null,c)}const h=s(e,[["render",D]]);export{m as __pageData,h as default};
