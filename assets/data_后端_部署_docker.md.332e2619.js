import{_ as s,o as a,c as n,X as l}from"./chunks/framework.9bc23fa4.js";const o="/learning-document-v3/assets/image2.0b418591.png",p="/learning-document-v3/assets/image1.ec63f882.png",e="/learning-document-v3/assets/image-20221108161305062.b9a7b66a.png",k=JSON.parse('{"title":"docker","description":"","frontmatter":{},"headers":[],"relativePath":"data/后端/部署/docker.md","filePath":"data/后端/部署/docker.md","lastUpdated":1720420715000}'),t={name:"data/后端/部署/docker.md"},c=l(`<h1 id="docker" tabindex="-1">docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;docker&quot;">​</a></h1><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><p>开源容器解决方案，高效、轻量、可移植<br><a href="https://docs.docker.com/" target="_blank" rel="noreferrer">https://docs.docker.com/</a></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h3 id="mac安装docker" tabindex="-1">mac安装docker <a class="header-anchor" href="#mac安装docker" aria-label="Permalink to &quot;mac安装docker&quot;">​</a></h3><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">启动docker服务 systemctl start docker</span></span>
<span class="line"><span style="color:#A6ACCD;">重启docker服务 systemctl restart docker</span></span>
<span class="line"><span style="color:#A6ACCD;">启动docker服务旧版本 service docker start</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">docker查看日志 docker logs -f -t --tail 10 ca</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">查看镜像 docker images</span></span>
<span class="line"><span style="color:#A6ACCD;">获取镜像 docker pull ubuntu:13.10</span></span>
<span class="line"><span style="color:#A6ACCD;">查找镜像 docker search httpd</span></span>
<span class="line"><span style="color:#A6ACCD;">运行镜像 docker run httpd</span></span>
<span class="line"><span style="color:#A6ACCD;">删除镜像 docker rmi hello-world</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">查看正在运行的容器 docker ps</span></span>
<span class="line"><span style="color:#A6ACCD;">查看所有的容器 docker ps -a </span></span>
<span class="line"><span style="color:#A6ACCD;">启动容器 docker start b750bbbcfd88 </span></span>
<span class="line"><span style="color:#A6ACCD;">重启容器 docker restart b750bbbcfd88 </span></span>
<span class="line"><span style="color:#A6ACCD;">停止容器 docker stop b750bbbcfd88</span></span>
<span class="line"><span style="color:#A6ACCD;">删除容器 </span></span>
<span class="line"><span style="color:#A6ACCD;">   docker rm -f 1e560fca3906</span></span>
<span class="line"><span style="color:#A6ACCD;">   docker container rm  &lt;container ID&gt; </span></span>
<span class="line"><span style="color:#A6ACCD;">查看容器信息 docker inspect 容器名</span></span>
<span class="line"><span style="color:#A6ACCD;">进入后台容器 docker exec -it 243c32535da7 /bin/bash </span></span>
<span class="line"><span style="color:#A6ACCD;">进入后台容器 用ROOT用户 docker exec -it -u root 容器 bash</span></span>
<span class="line"><span style="color:#A6ACCD;">退出容器 exit </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">根据镜像创建容器 docker run -d --name=testtong --restart=always -p 8011:8080 registry.cn-shanghai.aliyuncs.com/kufang/daservice</span></span>
<span class="line"><span style="color:#A6ACCD;">根据已有镜像创建容器 docker container run -it -d -p 82:80 --name testtong 1dbc90bf1e40</span></span>
<span class="line"><span style="color:#A6ACCD;">参考 &lt;https://www.jianshu.com/p/6a9b07c92995&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">docker文件拷贝到宿主机 </span></span>
<span class="line"><span style="color:#A6ACCD;">   docker cp testtomcat：/usr/local/tomcat/webapps/test/js/test.js  /opt</span></span>
<span class="line"><span style="color:#A6ACCD;">   docker cp daservice:/usr/local/share/tessdata /root/tong/laji</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">docker 查看挂载目录：docker inspect container_name | grep Mounts -A 20</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">停止所有容器 docker stop $(docker ps -aq)</span></span>
<span class="line"><span style="color:#A6ACCD;">开始所有容器 docker rm $(docker ps -aq)</span></span>
<span class="line"><span style="color:#A6ACCD;">清理掉处于终止状态的容器 docker container prune</span></span>
<span class="line"><span style="color:#A6ACCD;">后台运行的容器 docker run -itd --name ubuntu-test ubuntu /bin/bash </span></span>
<span class="line"><span style="color:#A6ACCD;">导出容器 docker export 1e560fca3906 &gt; ubuntu.tar </span></span>
<span class="line"><span style="color:#A6ACCD;">导入容器 cat docker/ubuntu.tar | docker import - test/ubuntu:v1</span></span>
<span class="line"><span style="color:#A6ACCD;">   镜像导入容器： docker import http://example.com/exampleimage.tgz example/imagerepo</span></span>
<span class="line"><span style="color:#A6ACCD;">web日志 docker logs -f bf08b7f2cd89</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">docker cp comonitor.war comonitor:/usr/share/apache-tomcat-7.0.96/webapps 会自动解压 </span></span>
<span class="line"><span style="color:#A6ACCD;">docker restart comonitor</span></span>
<span class="line"><span style="color:#A6ACCD;">docker exec -it 7453d7a061a0 /bin/bash </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">改镜像地址 vim  /etc/docker/daemon.json </span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;registry-mirrors&quot;:[&quot;https://registry.docker-cn.com&quot;]</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>查看容器内存占用<br> docker stats <img src="`+o+'" alt="image"></p><p>free -h <img src="'+p+`" alt="image"></p><p>查看docker容器进程 docker container top 【容器名称】</p><h2 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h2><h3 id="dockerfile" tabindex="-1">dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;dockerfile&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker pull java:8u111</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 基于哪个镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">FROM java:8</span></span>
<span class="line"><span style="color:#A6ACCD;"># 将本地文件夹挂载到当前容器</span></span>
<span class="line"><span style="color:#A6ACCD;">VOLUME /tmp</span></span>
<span class="line"><span style="color:#A6ACCD;"># 拷贝文件到容器，handcuffs-reg-0.0.1-SNAPSHOT.jar这里是maven打包后的名字</span></span>
<span class="line"><span style="color:#A6ACCD;">ADD dtcms-asset-alarm.jar dtcms-asset-alarm.jar</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN bash -c &#39;touch /dtcms-asset-alarm.jar&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"># 配置容器启动后执行的命令</span></span>
<span class="line"><span style="color:#A6ACCD;">ENTRYPOINT  [&quot;java&quot;,&quot;-Djava.security.egd=file:/dev/./urandom&quot;,&quot;-jar&quot;,&quot;/dtcms-asset-alarm.jar&quot;]</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[root@localhost test2]# ls</span></span>
<span class="line"><span style="color:#A6ACCD;">Dockerfile  einvoice.jar</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker build -t springbootdemo4docker .</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[root@localhost docker]# docker run -d -p 8080:8085 springbootdemo4docker</span></span>
<span class="line"><span style="color:#A6ACCD;">-d参数是让容器后台运行 </span></span>
<span class="line"><span style="color:#A6ACCD;">-p 是做端口映射，此时将服务器中的8080端口映射到容器中的8085(项目中端口配置的是8085)端口</span></span></code></pre></div><h3 id="docker部署war包" tabindex="-1">docker部署war包 <a class="header-anchor" href="#docker部署war包" aria-label="Permalink to &quot;docker部署war包&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://blog.csdn.net/xiaoye319/article/details/90515996</span></span>
<span class="line"><span style="color:#A6ACCD;">直接放容器里的webapp下(容器关闭可能war包会消失)，或者挂载目录到webapp</span></span>
<span class="line"><span style="color:#A6ACCD;">1、docker search tomcat 搜索镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">2、docker pull docker.io/tomcat 根据tomcat名称拉去镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">3、docker run -d -p 8088:8080 docker.io/tomcat 使用镜像启动容器</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">1、安装vim apt-get update &amp;&amp; apt-get install vim -y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">2、dockerfile文件</span></span>
<span class="line"><span style="color:#A6ACCD;">FROM 77be327e4b63 （这串数字是我已经创建好一个ubuntu镜像的镜像id，在这里作为tomcat的基础镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">MAINTAINER hmk</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV REFRESHED_AT 2020-04-14 </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#切换镜像目录，进入/usr目录</span></span>
<span class="line"><span style="color:#A6ACCD;">WORKDIR /usr</span></span>
<span class="line"><span style="color:#A6ACCD;">#在/usr/下创建jdk目录,用来存放jdk文件</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN mkdir jdk</span></span>
<span class="line"><span style="color:#A6ACCD;">#在/usr/下创建tomcat目录，用来存放tomcat</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN mkdir tomcat</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#将宿主机的jdk目录下的文件拷至镜像的/usr/jdk目录下</span></span>
<span class="line"><span style="color:#A6ACCD;">ADD jdk1.8.0_231 /usr/jdk/</span></span>
<span class="line"><span style="color:#A6ACCD;">#将宿主机的tomcat目录下的文件拷至镜像的/usr/tomcat目录下</span></span>
<span class="line"><span style="color:#A6ACCD;">ADD apache-tomcat-9.0.34 /usr/tomcat/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#设置环境变量</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV JAVA_HOME=/usr/jdk</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV JRE_HOME=$JAVA_HOME/jre</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV PATH=/sbin:$JAVA_HOME/bin:$PATH</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#公开端口</span></span>
<span class="line"><span style="color:#A6ACCD;">EXPOSE 8080</span></span>
<span class="line"><span style="color:#A6ACCD;">#设置启动命令</span></span>
<span class="line"><span style="color:#A6ACCD;">ENTRYPOINT [&quot;/usr/tomcat/bin/catalina.sh&quot;,&quot;run&quot;]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">3、构建docker build -t tong/tomcat .</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">docker run -d --name=einvoice -e &quot;container=docker&quot; --restart=always -p 90:8080 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /hosts:/etc/hosts \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /cubedata/NFS_ts:/NFS_ts \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /cubedata/logs/einvoice:/usr/share/tomcat/logs \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;TZ=Asia/Shanghai&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_FILEPARSER_DB_HOST=172.16.0.104&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_FILEPARSER_DB_PORT=3306&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_FILEPARSER_DB_TABLENAME=fileparser&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_FILEPARSER_DB_USERNAME=root&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_FILEPARSER_DB_PASSWORD=ssmedia-11&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;CUBESERVICE_DB_HOST=172.16.0.104&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;CUBESERVICE_DB_PORT=3306&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;CUBESERVICE_DB_TABLENAME=einvoice&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;CUBESERVICE_DB_USERNAME=root&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;CUBESERVICE_DB_PASSWORD=ssmedia-11&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_HOST=172.16.0.104&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_PORT=80&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;DASERVICE_ANALYSIS=analysis.do&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;REDIS_HOST=172.16.0.104&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;REDIS_PASSWORD=ssmedia-11&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;REDIS_TIMEOUT=2000&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e &quot;EINVOICE_IP=172.16.0.104:90&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">registry.cn-shanghai.aliyuncs.com/kufang/einvoice:1.15.0T</span></span></code></pre></div><h3 id="项目案例" tabindex="-1">项目案例 <a class="header-anchor" href="#项目案例" aria-label="Permalink to &quot;项目案例&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker run </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">daservice </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container=docker</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">privileged</span><span style="color:#89DDFF;">=true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">device </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">dev</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">mem </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">restart</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">always </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">p </span><span style="color:#F78C6C;">84</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">8070</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">hosts</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">etc</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">hosts \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">ticketparser</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">ticketparser \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">NFS_ts</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">NFS_ts \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">NFS_ts2</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">NFS_ts2 \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">logs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">daservice</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">logs \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TZ=Asia/Shanghai</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">registry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cn</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">shanghai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">aliyuncs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">kufang</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">daservice</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">2.1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">2T</span></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker run </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">testtong </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">restart</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">always </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">p </span><span style="color:#F78C6C;">8011</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> registry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cn</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">shanghai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">aliyuncs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">kufang</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">daservice</span></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">查看images创建命令</span></span>
<span class="line"><span style="color:#A6ACCD;">docker history registry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cn</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">shanghai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">aliyuncs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">kufang</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">einvoice</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">0T </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">docker history registry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cn</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">shanghai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">aliyuncs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">kufang</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">einvoice</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">0T </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">no</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">trunc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">docker history registry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cn</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">shanghai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">aliyuncs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">kufang</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">einvoice</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">0T </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">no</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">trunc</span></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 部署comonitor服务dockerfile文件例子</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">docker run </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">comonitor </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container=docker</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">privileged</span><span style="color:#89DDFF;">=true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">device </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">dev</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">mem </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">restart</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">always </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">p </span><span style="color:#F78C6C;">87</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">hosts</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">etc</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">hosts \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">data_3D</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">NFS_ts2</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">NFS_ts2 \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">data_3D</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">logs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">comonitor</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">usr</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">share</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">tomcat</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">logs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TZ=Asia/Shanghai</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_FILEPARSER_DB_HOST=172.16.0.104</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_FILEPARSER_DB_PORT=3306</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_FILEPARSER_DB_TABLENAME=fileparser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_FILEPARSER_DB_USERNAME=root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_FILEPARSER_DB_PASSWORD=ssmedia-11</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DPS_DB_HOST=172.16.0.104</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DPS_DB_PORT=3306</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DPS_DB_TABLENAME=dps</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DPS_DB_USERNAME=root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DPS_DB_PASSWORD=ssmedia-11</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_COMONITOR_DB_HOST=172.16.0.104</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_COMONITOR_DB_PORT=3306</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_COMONITOR_DB_TABLENAME=comonitor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_COMONITOR_DB_USERNAME=root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_COMONITOR_DB_PASSWORD=ssmedia-11</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DMS_DB_HOST=172.16.0.104</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DMS_DB_PORT=3306</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DMS_DB_TABLENAME=dms</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DMS_DB_USERNAME=root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DASERVICE_DMS_DB_PASSWORD=ssmedia-11</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MQTT_SERVER_URI=tcp://172.16.1.95:1883</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MQTT_SERVER_USER_NAME=counect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MQTT_SERVER_PASSWORD=123456</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">COMONITOR_URL=服务器入口地址/comonitor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">registry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cn</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">shanghai</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">aliyuncs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">kufang</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">comonitor</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#F78C6C;">0.7</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">1</span></span></code></pre></div><h2 id="底层原理" tabindex="-1">底层原理 <a class="header-anchor" href="#底层原理" aria-label="Permalink to &quot;底层原理&quot;">​</a></h2><p><strong>Docker是Client/Server架构。其中Docker守护进程是服务端，Docker命令行是众多客户端之一</strong></p><ol><li><p><strong>docker daemon</strong>Docker守护进程(docker daemon)是运行在你的操作系统上的一个服务。目前，它只能运行在Linux上，因为它依赖于一些Linux内核特性(比如Cgroup与Namespace)。 但是，也有一些特殊的办法让Docker运行在MacOS与Windows上(运行在Linux虚拟机中)。</p><p>Docker守护进程提供了REST API。许多工具(Docker命令行，Docker Compose等)都可以通过REST API与Docker守护进程进行交互，例如创建容器，构建镜像等。</p></li><li><p><strong>docker CLI</strong>Docker命令行(docker CLI)是与Docker守护进程进行交互的主要工具。</p></li></ol><p><img src="`+e+`" alt="image-20221108161305062"></p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><p><strong>一、占用空间</strong></p><p>/var/lib/docker/overlay2过大</p><p>/var/lib/docker/image/overlay2：存储镜像管理元数据的目录，以使用存储驱动命名。</p><p>/var/lib/docker/overlay2:　　docker镜像存储的联合挂载根目录</p><p><a href="https://blog.csdn.net/weixin_32820767/article/details/81196250" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_32820767/article/details/81196250</a></p><p><strong>二、网络模式</strong></p><p><strong>Docker Compose</strong></p><p><a href="https://www.cnblogs.com/zuxing/articles/8780661.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/zuxing/articles/8780661.html</a></p><p>docker network inspect bridge</p><p><strong>三、容器网络管理</strong></p><p>docker1.1 新特性--libnetwork模块</p><p>存储驱动之一 overlay2 管理卷 四种网络模式 brighe(默认网络。docker启动后，会默认创建一个docker0网桥，默认创建的容器也是添加到这个网桥中)</p><h2 id="centos安装docker" tabindex="-1">centos安装docker <a class="header-anchor" href="#centos安装docker" aria-label="Permalink to &quot;centos安装docker&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">安装必要工具包</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">跟新yum缓存</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo yum makecache fast 或者 sudo yum makecache</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">添加软件源信息</span></span>
<span class="line"><span style="color:#A6ACCD;">yum-config-manager --add-repo   http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">安装docker</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo yum -y install docker-ce</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">启动docker</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo systemctl start docker</span></span></code></pre></div><p>参考文档<br><a href="https://developer.aliyun.com/article/1000962#:~:text=%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85%20Docker%201%E3%80%81%E4%BD%BF%E7%94%A8%20sudo%20%E6%88%96%20root%20%E6%9D%83%E9%99%90%E7%99%BB%E5%BD%95%20Centos%E3%80%82,%E5%8C%85%E6%9B%B4%E6%96%B0%E5%88%B0%E6%9C%80%E6%96%B0%E3%80%82%20%24%20sudo%20yum%20update%203%E3%80%81%E6%89%A7%E8%A1%8C%20Docker%20%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%E3%80%82" target="_blank" rel="noreferrer">https://developer.aliyun.com/article/1000962#:~:text=使用脚本安装 Docker 1、使用 sudo 或 root 权限登录 Centos。,包更新到最新。 %24 sudo yum update 3、执行 Docker 安装脚本。</a></p><h2 id="docker安装zookeeper" tabindex="-1">docker安装zookeeper <a class="header-anchor" href="#docker安装zookeeper" aria-label="Permalink to &quot;docker安装zookeeper&quot;">​</a></h2><p>docker pull zookeeper</p><p>docker network create --driver bridge --subnet=172.18.0.0/16 --gateway=172.18.0.1 zoonet</p><p>docker network ls</p><p>mkdir /data/zookeeper/cluster/zk1/{data,datalog,logs} -p mkdir /data/zookeeper/cluster/zk2/{data,datalog,logs} -p mkdir /data/zookeeper/cluster/zk3/{data,datalog,logs} -p</p><p>docker run -d -p 2181:2181 --name zookeeper_node01 --privileged --restart always --network zoonet --ip 172.18.0.2 <br> -v /data/zookeeper/cluster/zk1/data:/data <br> -v /data/zookeeper/cluster/zk1/datalog:/datalog <br> -v /data/zookeeper/cluster/zk1/logs:/logs <br> -e ZOO_MY_ID=1 <br> -e &quot;ZOO_SERVERS=server.1=172.18.0.2:2888:3888;2181 server.2=172.18.0.3:2888:3888;2181 server.3=172.18.0.4:2888:3888;2181&quot; zookeeper</p><p>docker run -d -p 2182:2181 --name zookeeper_node02 --privileged --restart always --network zoonet --ip 172.18.0.3 <br> -v /data/zookeeper/cluster/zk2/data:/data <br> -v /data/zookeeper/cluster/zk2/datalog:/datalog <br> -v /data/zookeeper/cluster/zk2/logs:/logs <br> -e ZOO_MY_ID=2 <br> -e &quot;ZOO_SERVERS=server.1=172.18.0.2:2888:3888;2181 server.2=172.18.0.3:2888:3888;2181 server.3=172.18.0.4:2888:3888;2181&quot; zookeeper</p><p>docker run -d -p 2183:2181 --name zookeeper_node03 --privileged --restart always --network zoonet --ip 172.18.0.4 <br> -v /data/zookeeper/cluster/zk3/data:/data <br> -v /data/zookeeper/cluster/zk3/datalog:/datalog <br> -v /data/zookeeper/cluster/zk3/logs:/logs <br> -e ZOO_MY_ID=3 <br> -e &quot;ZOO_SERVERS=server.1=172.18.0.2:2888:3888;2181 server.2=172.18.0.3:2888:3888;2181 server.3=172.18.0.4:2888:3888;2181&quot; zookeeper</p><p>docker logs -f 1912ae817d33</p><p>参考文档 <a href="https://blog.csdn.net/weixin_39555954/article/details/119942679" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_39555954/article/details/119942679</a></p><p>yum install -y docker-compose</p><p>touch docker-compose-yml</p><p>version: &#39;3&#39; services: kafka1: image: wurstmeister/kafka container_name: kafka1 ports: - &quot;9093:9092&quot; environment: KAFKA_BROKER_ID: 0 KAFKA_NUM_PARTITIONS: 3 KAFKA_DEFAULT_REPLICATION_FACTOR: 2 KAFKA_ZOOKEEPER_CONNECT: 127.0.0.1:2181 KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9093 volumes: - /data/docker-compose/kafka/broker1/logs:/opt/kafka/logs - /var/run/docker.sock:/var/run/docker.sock restart: always</p><p>kafka2: image: wurstmeister/kafka container_name: kafka2 ports: - &quot;9094:9092&quot; environment: KAFKA_BROKER_ID: 1 KAFKA_NUM_PARTITIONS: 3 KAFKA_DEFAULT_REPLICATION_FACTOR: 2 KAFKA_ZOOKEEPER_CONNECT: 127.0.0.1:2181 KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9094 volumes: - /data/docker-compose/kafka/broker2/logs:/opt/kafka/logs - /var/run/docker.sock:/var/run/docker.sock restart: always</p><p>kafka3: image: wurstmeister/kafka container_name: kafka3 ports: - &quot;9095:9092&quot; environment: KAFKA_BROKER_ID: 2 KAFKA_NUM_PARTITIONS: 3 KAFKA_DEFAULT_REPLICATION_FACTOR: 2 KAFKA_ZOOKEEPER_CONNECT: 127.0.0.1:2181 KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9095 volumes: - /data/docker-compose/kafka/broker3/logs:/opt/kafka/logs - /var/run/docker.sock:/var/run/docker.sock restart: always</p><p>创建 kafka 容器并启动 docker-compose up -d --build kafka1 docker-compose up -d --build kafka2 docker-compose up -d --build kafka3</p><p>停止 kafka 容器 docker-compose stop kafka1 docker-compose stop kafka2 docker-compose stop kafka3</p><h2 id="docker安装kafka" tabindex="-1">docker安装kafka <a class="header-anchor" href="#docker安装kafka" aria-label="Permalink to &quot;docker安装kafka&quot;">​</a></h2><h2 id="docker安装postgresql" tabindex="-1">docker安装postgresql <a class="header-anchor" href="#docker安装postgresql" aria-label="Permalink to &quot;docker安装postgresql&quot;">​</a></h2><h3 id="方式一" tabindex="-1">方式一 <a class="header-anchor" href="#方式一" aria-label="Permalink to &quot;方式一&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">查询版本</span></span>
<span class="line"><span style="color:#A6ACCD;">docker search postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">拉取镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker pull postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">创建容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run -it \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name postgres \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--privileged \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e POSTGRES_PASSWORD=通用密码 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p 5432:5432 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /usr/local/software/postgres/data:/var/lib/postgresql/data \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-d postgres</span></span>
<span class="line"><span style="color:#A6ACCD;">命令详细解释如下：</span></span>
<span class="line"><span style="color:#A6ACCD;">–name postgres：指定容器的名称；</span></span>
<span class="line"><span style="color:#A6ACCD;">-e POSTGRES_PASSWORD=Abc1234%：设置环境变量，这里为设定PostgreSQL数据库的密码；</span></span>
<span class="line"><span style="color:#A6ACCD;">-p 5432:5432：指定端口映射，前者为宿主机访问端口，后者为容器内端口。如果不指定端口映射，只有在容器内可以访问数据库，外部是无法访问的；</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /home/zx/postgres/data:/var/lib/postgresql/data：v是volume的简写，即绑定一个卷，冒号前的路径为宿主机的路径（如果指定路径不存在会自动创建目录），冒号后为容器内路径。容器会把宿主机的目录映射到容器内的路径，这样容器运行中生成的数据实际上就是写到了宿主机的指定路径上，即使容器删除了，此路径的文件也不会删除，这样就做到了数据库的持久化存储。还可以通过docker volume提供的相关命令显式地创建volume，然后再挂载到容器上，这里不做介绍，请自行查询相关内容；</span></span>
<span class="line"><span style="color:#A6ACCD;">-d：表示后台运行容器；</span></span>
<span class="line"><span style="color:#A6ACCD;">postgres：表示镜像的名称，docker基于上步拉取的镜像创建出容器；</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">查看日志</span></span>
<span class="line"><span style="color:#A6ACCD;">docker logs postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">容器内连接数据库</span></span>
<span class="line"><span style="color:#A6ACCD;">docker exec -it postgres /bin/bash</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">su postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">psql</span></span></code></pre></div><p>参考文档<br><a href="https://blog.csdn.net/Pireley/article/details/132312178" target="_blank" rel="noreferrer">https://blog.csdn.net/Pireley/article/details/132312178</a></p><h3 id="方式二" tabindex="-1">方式二 <a class="header-anchor" href="#方式二" aria-label="Permalink to &quot;方式二&quot;">​</a></h3><p>docker pull postgres</p><p>创建本地卷<br> 数据卷可以在容器之间共享和重用，默认会一直存在，即使容器被删除（docker volume inspect pgdata可查看数据卷的本地位置）<br> docker volume create pgdata</p><p>docker run --name pgsql -p 5432:5432 -e POSTGRES_PASSWORD=abc123 -v pgdata:/var/lib/postgresql/data --restart=always -d postgres</p><p>第一条命令进入名为 <code>pgsql</code>的容器运行时； docker exec -it pgsql bash</p><p>第二条命令登录postgresql命令行控制台 psql -U postgres -W</p><p>参考文档 <a href="https://www.cnblogs.com/kendoziyu/p/15778778.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/kendoziyu/p/15778778.html</a></p><h2 id="docker安装mysql" tabindex="-1">docker安装mysql <a class="header-anchor" href="#docker安装mysql" aria-label="Permalink to &quot;docker安装mysql&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">拉取镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker pull mysql	</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">创建容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name mysql \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-d \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p 3306:3306 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--restart unless-stopped \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /tong/mysql/log:/var/log/mysql \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /tong/mysql/data:/var/lib/mysql \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v /tong/mysql/conf:/etc/mysql/conf.d \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e MYSQL_ROOT_PASSWORD=通用密码 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">mysql:latest</span></span></code></pre></div><h2 id="docker安装mongodb" tabindex="-1">docker安装mongodb <a class="header-anchor" href="#docker安装mongodb" aria-label="Permalink to &quot;docker安装mongodb&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">拉取镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker pull mongo</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">创建持久化目录</span></span>
<span class="line"><span style="color:#A6ACCD;">mkdir -p /tong/mongodb/data</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">创建容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run -itd --name mongo -v /tong/mongodb/data:/data/db -p 27017:27017 mongo --auth</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">登录mongo容器，并进入到【admin】数据库</span></span>
<span class="line"><span style="color:#A6ACCD;">docker exec -it mongo mongosh admin</span></span>
<span class="line"><span style="color:#A6ACCD;">docker exec -it mongo mongosh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">进入admin数据库</span></span>
<span class="line"><span style="color:#A6ACCD;">user admin</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">创建用户</span></span>
<span class="line"><span style="color:#A6ACCD;">db.createUser({ user:&#39;root&#39;,pwd:&#39;通用密码&#39;,roles:[ { role:&#39;userAdminAnyDatabase&#39;, db: &#39;admin&#39;},&#39;readWriteAnyDatabase&#39;]});</span></span></code></pre></div><p>参考文档 <a href="https://blog.csdn.net/packge/article/details/126539320" target="_blank" rel="noreferrer">https://blog.csdn.net/packge/article/details/126539320</a></p><h2 id="docker安装redis" tabindex="-1">docker安装redis <a class="header-anchor" href="#docker安装redis" aria-label="Permalink to &quot;docker安装redis&quot;">​</a></h2><p>docker pull redis</p><h2 id="docker安装elasticsearch" tabindex="-1">docker安装elasticsearch <a class="header-anchor" href="#docker安装elasticsearch" aria-label="Permalink to &quot;docker安装elasticsearch&quot;">​</a></h2><p>创建网络</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">es-net</span></span></code></pre></div><p>拉取镜像</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">elasticsearch:8.6.0</span></span></code></pre></div><p>创建挂载点目录</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/es/data</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/es/config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/es/plugins</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">777</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/usr/local/es/data</span></span>
<span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">777</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/usr/local/es/config</span></span>
<span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">777</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">/usr/local/es/plugins</span></span></code></pre></div><p>创建容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--restart=always \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name </span><span style="color:#C3E88D;">es</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--network </span><span style="color:#C3E88D;">es-net</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">9200</span><span style="color:#C3E88D;">:9200</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">9300</span><span style="color:#C3E88D;">:9300</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--privileged \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v </span><span style="color:#C3E88D;">/usr/local/es/data:/usr/share/elasticsearch/data</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v </span><span style="color:#C3E88D;">/usr/local/es/plugins:/usr/share/elasticsearch/plugins</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">discovery.type=single-node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ES_JAVA_OPTS=-Xms512m -Xmx512m</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">elasticsearch:8.6.0</span></span></code></pre></div><p>进入容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">es</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span></code></pre></div><p>进入配置</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span></span></code></pre></div><p>修改配置 关闭密码安全验证</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xpack.security.enabled: false</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">elasticsearch.yml</span></span></code></pre></div><p>重启容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">es</span></span></code></pre></div><p>访问地址 <a href="http://xn--IP-fr5c86lx7z:9200" target="_blank" rel="noreferrer">http://服务器IP:9200</a></p><p>安装IK分词器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">es</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">./bin/elasticsearch-plugin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v8.6.0/elasticsearch-analysis-ik-8.6.0.zip</span></span></code></pre></div><p><strong>注意：安装IK分词器的版本，必须和Elasticsearch的版本一致，上文安装的是Elasticsearch 8.6.0的，所以接下来安装的IK分词器版本是8.6.0</strong></p><p>参考文档<br><a href="https://blog.csdn.net/Acloasia/article/details/130683934" target="_blank" rel="noreferrer">基于Docker安装Elasticsearch【保姆级教程、内含图解】</a><a href="https://blog.csdn.net/Acloasia/article/details/130683934" target="_blank" rel="noreferrer">https://blog.csdn.net/Acloasia/article/details/130683934</a></p><h2 id="docker安装kibana" tabindex="-1">docker安装kibana <a class="header-anchor" href="#docker安装kibana" aria-label="Permalink to &quot;docker安装kibana&quot;">​</a></h2><p>拉取镜像</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kibana:8.6.0</span></span></code></pre></div><p>创建挂载点目录</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/kibana/config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/kibana/data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">777</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/kibana/data</span></span>
<span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">777</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/kibana/config</span></span></code></pre></div><p>创建容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--restart=always \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name </span><span style="color:#C3E88D;">kibana</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--network </span><span style="color:#C3E88D;">es-net</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">5601</span><span style="color:#C3E88D;">:5601</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e </span><span style="color:#C3E88D;">ELASTICSEARCH_HOSTS=http://es:9200</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">kibana:8.6.0</span></span></code></pre></div><p>访问地址 <a href="http://xn--IP-fr5c86lx7z:5601/" target="_blank" rel="noreferrer">http://服务器IP:5601/</a></p><h2 id="docker安装logstash" tabindex="-1">docker安装logstash <a class="header-anchor" href="#docker安装logstash" aria-label="Permalink to &quot;docker安装logstash&quot;">​</a></h2><p>拉取镜像</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logstash:8.11.1</span></span></code></pre></div><p>创建容器</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/Users/xyt/Desktop/tong/dockerlink/logstash/config/logstash.conf:/usr/share/logstash/config/logstash.conf</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/Users/xyt/Desktop/tong/dockerlink/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/Users/xyt/Desktop/tong/dockerlink/logstash/logs:/usr/share/logstash/logs</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--name=logstash </span><span style="color:#C3E88D;">logstash:8.11.1</span></span></code></pre></div><p>复制文件，以便下次启动挂载</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logstash:/usr/share/logstash/config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/Users/xyt/Desktop/tong/dockerlink/logstash</span></span></code></pre></div><p>授权挂载文件夹</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">777</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-R</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/Users/xyt/Desktop/tong/dockerlink/logstash</span></span></code></pre></div><p>参考文档<br><a href="https://blog.csdn.net/cristianoxm/article/details/119605340" target="_blank" rel="noreferrer">docker安装logstash及logstash配置</a><a href="https://blog.csdn.net/cristianoxm/article/details/119605340" target="_blank" rel="noreferrer">https://blog.csdn.net/cristianoxm/article/details/119605340</a></p><h2 id="docker-compose" tabindex="-1">docker compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker compose&quot;">​</a></h2><p>Compose 通过一个配置文件来管理多个Docker容器，在配置文件中，所有的容器通过services来定义，然后使用docker-compose脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。</p><p>yum install -y docker-compose</p>`,125),r=[c];function C(A,D,i,y,d,F){return a(),n("div",null,r)}const h=s(t,[["render",C]]);export{k as __pageData,h as default};
